print("----------------------------")
print("--why are you looking here--")
print("----------------------------")
print("--Game : RETRO STUDIO-------")
print("--Place : Get Crushed By A**")
print("**Speeding Wall!------------")
print("--Script Name : Get-------**")
print("**Crushed By A Speeding---**")
print("**Wall Auto Paint Script----")
print("----------------------------")

-- Instances: 23 | Scripts: 4 | Modules: 0 | Tags: 0
local G2L = {};

-- StarterGui.ScreenGui
G2L["1"] = Instance.new("ScreenGui", game:GetService("CoreGui"));
G2L["1"]["IgnoreGuiInset"] = true;
G2L["1"]["DisplayOrder"] = 2000;
G2L["1"]["ScreenInsets"] = Enum.ScreenInsets.DeviceSafeInsets;
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;
G2L["1"]["ResetOnSpawn"] = false;


-- StarterGui.ScreenGui.inf
G2L["2"] = Instance.new("TextButton", G2L["1"]);
G2L["2"]["TextWrapped"] = true;
G2L["2"]["BorderSizePixel"] = 0;
G2L["2"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2"]["TextSize"] = 22;
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(19, 19, 19);
G2L["2"]["RichText"] = true;
G2L["2"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["2"]["AnchorPoint"] = Vector2.new(0, 1);
G2L["2"]["Size"] = UDim2.new(0, 200, 0, 50);
G2L["2"]["Name"] = [[inf]];
G2L["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2"]["Text"] = [[AUTO PAINT <br/>]];
G2L["2"]["Position"] = UDim2.new(0, 0, 1, 0);


-- StarterGui.ScreenGui.inf.close
G2L["3"] = Instance.new("TextButton", G2L["2"]);
G2L["3"]["TextWrapped"] = true;
G2L["3"]["BorderSizePixel"] = 0;
G2L["3"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3"]["TextSize"] = 14;
G2L["3"]["TextScaled"] = true;
G2L["3"]["BackgroundColor3"] = Color3.fromRGB(19, 19, 19);
G2L["3"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["3"]["Size"] = UDim2.new(0, 40, 1, 0);
G2L["3"]["Name"] = [[close]];
G2L["3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3"]["Text"] = [[<]];
G2L["3"]["Position"] = UDim2.new(1, 0, 0, 0);


-- StarterGui.ScreenGui.inf.close.UIStroke
G2L["4"] = Instance.new("UIStroke", G2L["3"]);
G2L["4"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["4"]["Thickness"] = 2;
G2L["4"]["Color"] = Color3.fromRGB(41, 41, 41);


-- StarterGui.ScreenGui.inf.UIStroke
G2L["5"] = Instance.new("UIStroke", G2L["2"]);
G2L["5"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["5"]["Thickness"] = 2;
G2L["5"]["Color"] = Color3.fromRGB(41, 41, 41);


-- StarterGui.ScreenGui.inf.cls
G2L["6"] = Instance.new("TextLabel", G2L["2"]);
G2L["6"]["TextWrapped"] = true;
G2L["6"]["BorderSizePixel"] = 0;
G2L["6"]["TextSize"] = 14;
G2L["6"]["TextTransparency"] = 1;
G2L["6"]["TextScaled"] = true;
G2L["6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["6"]["TextColor3"] = Color3.fromRGB(255, 0, 0);
G2L["6"]["BackgroundTransparency"] = 1;
G2L["6"]["AnchorPoint"] = Vector2.new(0, 1);
G2L["6"]["Size"] = UDim2.new(1, 0, 0.5, 0);
G2L["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6"]["Text"] = [[CLOSE]];
G2L["6"]["Name"] = [[cls]];
G2L["6"]["Position"] = UDim2.new(0, 0, 1, 0);


-- StarterGui.ScreenGui.inf.opn
G2L["7"] = Instance.new("TextLabel", G2L["2"]);
G2L["7"]["TextWrapped"] = true;
G2L["7"]["BorderSizePixel"] = 0;
G2L["7"]["TextSize"] = 14;
G2L["7"]["TextScaled"] = true;
G2L["7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["7"]["TextColor3"] = Color3.fromRGB(0, 255, 0);
G2L["7"]["BackgroundTransparency"] = 1;
G2L["7"]["AnchorPoint"] = Vector2.new(0, 1);
G2L["7"]["Size"] = UDim2.new(1, 0, 0.5, 0);
G2L["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7"]["Text"] = [[OPEN]];
G2L["7"]["Name"] = [[opn]];
G2L["7"]["Position"] = UDim2.new(0, 0, 1, 0);


-- StarterGui.ScreenGui.inf.G
G2L["8"] = Instance.new("TextBox", G2L["2"]);
G2L["8"]["Name"] = [[G]];
G2L["8"]["BorderSizePixel"] = 0;
G2L["8"]["TextWrapped"] = true;
G2L["8"]["TextSize"] = 14;
G2L["8"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8"]["TextScaled"] = true;
G2L["8"]["BackgroundColor3"] = Color3.fromRGB(19, 19, 19);
G2L["8"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["8"]["AnchorPoint"] = Vector2.new(0, 1);
G2L["8"]["PlaceholderText"] = [[G]];
G2L["8"]["Size"] = UDim2.new(0.25, 0, 1, 0);
G2L["8"]["Position"] = UDim2.new(0.25, 0, 0, 0);
G2L["8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["8"]["Text"] = [[]];


-- StarterGui.ScreenGui.inf.G.UIStroke
G2L["9"] = Instance.new("UIStroke", G2L["8"]);
G2L["9"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["9"]["Thickness"] = 2;
G2L["9"]["Color"] = Color3.fromRGB(41, 41, 41);


-- StarterGui.ScreenGui.inf.B
G2L["a"] = Instance.new("TextBox", G2L["2"]);
G2L["a"]["Name"] = [[B]];
G2L["a"]["BorderSizePixel"] = 0;
G2L["a"]["TextWrapped"] = true;
G2L["a"]["TextSize"] = 14;
G2L["a"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a"]["TextScaled"] = true;
G2L["a"]["BackgroundColor3"] = Color3.fromRGB(19, 19, 19);
G2L["a"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["a"]["AnchorPoint"] = Vector2.new(0, 1);
G2L["a"]["PlaceholderText"] = [[B]];
G2L["a"]["Size"] = UDim2.new(0.25, 0, 1, 0);
G2L["a"]["Position"] = UDim2.new(0.5, 0, 0, 0);
G2L["a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a"]["Text"] = [[]];


-- StarterGui.ScreenGui.inf.B.UIStroke
G2L["b"] = Instance.new("UIStroke", G2L["a"]);
G2L["b"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["b"]["Thickness"] = 2;
G2L["b"]["Color"] = Color3.fromRGB(41, 41, 41);


-- StarterGui.ScreenGui.inf.Frame
G2L["c"] = Instance.new("Frame", G2L["2"]);
G2L["c"]["ZIndex"] = 2;
G2L["c"]["BorderSizePixel"] = 0;
G2L["c"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c"]["AnchorPoint"] = Vector2.new(1, 1);
G2L["c"]["Size"] = UDim2.new(0.25, -2, 1, -2);
G2L["c"]["Position"] = UDim2.new(1, -2, 0, 0);
G2L["c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);


-- StarterGui.ScreenGui.inf.Frame.UIStroke
G2L["d"] = Instance.new("UIStroke", G2L["c"]);
G2L["d"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["d"]["Thickness"] = 2;
G2L["d"]["Color"] = Color3.fromRGB(41, 41, 41);


-- StarterGui.ScreenGui.inf.R
G2L["e"] = Instance.new("TextBox", G2L["2"]);
G2L["e"]["Name"] = [[R]];
G2L["e"]["BorderSizePixel"] = 0;
G2L["e"]["TextWrapped"] = true;
G2L["e"]["TextSize"] = 14;
G2L["e"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e"]["TextScaled"] = true;
G2L["e"]["BackgroundColor3"] = Color3.fromRGB(19, 19, 19);
G2L["e"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["e"]["AnchorPoint"] = Vector2.new(0, 1);
G2L["e"]["PlaceholderText"] = [[R]];
G2L["e"]["Size"] = UDim2.new(0.25, 0, 1, 0);
G2L["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e"]["Text"] = [[]];


-- StarterGui.ScreenGui.inf.R.UIStroke
G2L["f"] = Instance.new("UIStroke", G2L["e"]);
G2L["f"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["f"]["Thickness"] = 2;
G2L["f"]["Color"] = Color3.fromRGB(41, 41, 41);


-- StarterGui.ScreenGui.inf.TextButton
G2L["10"] = Instance.new("TextButton", G2L["2"]);
G2L["10"]["TextWrapped"] = true;
G2L["10"]["BorderSizePixel"] = 0;
G2L["10"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["10"]["TextSize"] = 14;
G2L["10"]["TextScaled"] = true;
G2L["10"]["BackgroundColor3"] = Color3.fromRGB(19, 19, 19);
G2L["10"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["10"]["AnchorPoint"] = Vector2.new(0, 1);
G2L["10"]["Size"] = UDim2.new(1, -2, 1, 0);
G2L["10"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["10"]["Text"] = [[party mode : closed]];
G2L["10"]["Position"] = UDim2.new(0, 0, -1, 0);


-- StarterGui.ScreenGui.inf.TextButton.UIStroke
G2L["11"] = Instance.new("UIStroke", G2L["10"]);
G2L["11"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["11"]["Thickness"] = 2;
G2L["11"]["Color"] = Color3.fromRGB(41, 41, 41);


-- StarterGui.ScreenGui.inf.TextButton.LocalScript
G2L["12"] = Instance.new("LocalScript", G2L["10"]);



-- StarterGui.ScreenGui.inf.TextButton2
G2L["13"] = Instance.new("TextButton", G2L["2"]);
G2L["13"]["TextWrapped"] = true;
G2L["13"]["BorderSizePixel"] = 0;
G2L["13"]["TextColor3"] = Color3.fromRGB(255, 255, 255);
G2L["13"]["TextSize"] = 14;
G2L["13"]["TextScaled"] = true;
G2L["13"]["BackgroundColor3"] = Color3.fromRGB(19, 19, 19);
G2L["13"]["FontFace"] = Font.new([[rbxasset://fonts/families/Arial.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["13"]["AnchorPoint"] = Vector2.new(0, 1);
G2L["13"]["Size"] = UDim2.new(1, -2, 1, 0);
G2L["13"]["Name"] = [[TextButton2]];
G2L["13"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["13"]["Text"] = [[real auto color : closed]];
G2L["13"]["Position"] = UDim2.new(0, 0, -2, 0);


-- StarterGui.ScreenGui.inf.TextButton2.UIStroke
G2L["14"] = Instance.new("UIStroke", G2L["13"]);
G2L["14"]["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
G2L["14"]["Thickness"] = 2;
G2L["14"]["Color"] = Color3.fromRGB(41, 41, 41);


-- StarterGui.ScreenGui.inf.TextButton2.LocalScript
G2L["15"] = Instance.new("LocalScript", G2L["13"]);



-- StarterGui.ScreenGui.LocalScript
G2L["16"] = Instance.new("LocalScript", G2L["1"]);



-- StarterGui.ScreenGui.LocalScript.bombscript
G2L["17"] = Instance.new("LocalScript", G2L["16"]);
G2L["17"]["Name"] = [[bombscript]];


-- StarterGui.ScreenGui.inf.TextButton.LocalScript
local function C_12()
local script = G2L["12"];
	script.Parent.Activated:Connect(function()
		if script.Parent.Text == "party mode : closed" then
			script.Parent.Text = "party mode : open"
		else
			script.Parent.Text = "party mode : closed"
		end
	end)
end;
task.spawn(C_12);
-- StarterGui.ScreenGui.inf.TextButton2.LocalScript
local function C_15()
local script = G2L["15"];
	script.Parent.Activated:Connect(function()
		if script.Parent.Text == "real auto color : closed" then
			script.Parent.Text = "real auto color : open"
		else
			script.Parent.Text = "real auto color : closed"
		end
	end)
end;
task.spawn(C_15);
-- StarterGui.ScreenGui.LocalScript
local function C_16()
local script = G2L["16"];
	script.Parent.inf.Activated:Connect(function()
		if script.Parent.inf.cls.TextTransparency == 1 then
			game:GetService("TweenService"):Create(script.Parent.inf.cls,TweenInfo.new(0.5,Enum.EasingStyle.Quart,Enum.EasingDirection.InOut),{TextTransparency = 0}):Play()
			game:GetService("TweenService"):Create(script.Parent.inf.opn,TweenInfo.new(0.5,Enum.EasingStyle.Quart,Enum.EasingDirection.InOut),{TextTransparency = 1}):Play()
		elseif script.Parent.inf.cls.TextTransparency == 0 then
			game:GetService("TweenService"):Create(script.Parent.inf.cls,TweenInfo.new(0.5,Enum.EasingStyle.Quart,Enum.EasingDirection.InOut),{TextTransparency = 1}):Play()
			game:GetService("TweenService"):Create(script.Parent.inf.opn,TweenInfo.new(0.5,Enum.EasingStyle.Quart,Enum.EasingDirection.InOut),{TextTransparency = 0}):Play()
		end
	end)
	
	script.Parent.inf.close.Activated:Connect(function()
		if script.Parent.inf.Position == UDim2.new(0,0,1,0) then
			game:GetService("TweenService"):Create(script.Parent.inf,TweenInfo.new(0.5,Enum.EasingStyle.Quart,Enum.EasingDirection.InOut),{Position = UDim2.new(0,-200,1,0)}):Play()
		elseif script.Parent.inf.Position == UDim2.new(0,-200,1,0) then
			game:GetService("TweenService"):Create(script.Parent.inf,TweenInfo.new(0.5,Enum.EasingStyle.Quart,Enum.EasingDirection.InOut),{Position = UDim2.new(0,0,1,0)}):Play()
		end
	end)
end;
task.spawn(C_16);
-- StarterGui.ScreenGui.LocalScript.bombscript
local function C_17()
local script = G2L["17"];
	local rs = game:GetService("RunService")
	local fa = 0
	local cp = nil
	local wap = false
	local waf = false
	local wapc = 0
	local oldpos = nil
	local sop = nil
	local sopas = false
	
	rs.RenderStepped:Connect(function(dt)
		local color = BrickColor.new(0,0,0)
		if script.Parent.Parent.inf.TextButton.Text == "party mode : open" then
			color = BrickColor.new(Random.new():NextNumber(0,1),Random.new():NextNumber(0,1),Random.new():NextNumber(0,1))
		else
			color = BrickColor.new(tonumber(script.Parent.Parent.inf.R.Text),tonumber(script.Parent.Parent.inf.G.Text),tonumber(script.Parent.Parent.inf.B.Text))
		end
		script.Parent.Parent.inf.Frame.BackgroundColor3 = Color3.fromRGB(tonumber(script.Parent.Parent.inf.R.Text),tonumber(script.Parent.Parent.inf.G.Text),tonumber(script.Parent.Parent.inf.B.Text))
		if script.Parent.Parent.inf.opn.TextTransparency == 1 then
			local fp = {}
			for i,v in game.Workspace:GetChildren() do
				if v:IsA("Part") and v.Material == Enum.Material.Slate then
					print("Part found : "..v:GetFullName())
					table.insert(fp,v)
				end
			end
			if #fp == 0 then
				print("No parts found :(")
				game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character:WaitForChild("Humanoid")
				cp = nil
				wap = false
				wapc = 0
			else
				cp = fp[Random.new():NextInteger(1,#fp)]
			end
			if script.Parent.Parent.inf.TextButton2.Text == "real auto color : open" and cp ~= nil and cp.BrickColor ~= color then
				waf = true
				if sopas == false then
					sop = game.Players.LocalPlayer.Character.PrimaryPart.CFrame
					sopas = true
				end
				fa += 1
				print("Current frame : "..fa)
				if cp ~= nil then
					game.Workspace.CurrentCamera.CameraSubject = cp
					local pos = cp.CFrame.Position
					local char = game.Players.LocalPlayer.Character
					char:SetPrimaryPartCFrame(CFrame.new(pos + Vector3.new(-15,0,-15)))
					game:GetService("Players").LocalPlayer.Backpack.PaintBucket.Paint:FireServer(cp,color)
				end
			elseif script.Parent.Parent.inf.TextButton2.Text == "real auto color : open" and cp~= nil and cp.BrickColor == color then
				if waf == true and sopas == true then
					waf = false
					sopas = false
					game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(sop)
					game.Players.LocalPlayer.Character.PrimaryPart.Anchored = false
					game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character:WaitForChild("Humanoid")
				end
				sop = game.Players.LocalPlayer.Character.PrimaryPart.CFrame
				oldpos = game.Players.LocalPlayer.Character.PrimaryPart.CFrame
			elseif script.Parent.Parent.inf.TextButton2.Text == "real auto color : closed" then
				waf = true
				fa += 1
				print("Current frame : "..fa)
				local fp = {}
				for i,v in game.Workspace:GetChildren() do
					if v:IsA("Part") and v.Material == Enum.Material.Slate then
						print("Part found : "..v:GetFullName())
						game.Players.LocalPlayer.Character.PrimaryPart.Anchored = false
						table.insert(fp,v)
					end
				end
				if #fp == 0 then
					print("No parts found :(")
					game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character:WaitForChild("Humanoid")
					game.Players.LocalPlayer.Character.PrimaryPart.Anchored = true
					cp = nil
					wap = false
					wapc = 0
				else
					cp = fp[Random.new():NextInteger(1,#fp)]
				end
				if cp ~= nil then
					game.Workspace.CurrentCamera.CameraSubject = cp
					local pos = cp.CFrame.Position
					local char = game.Players.LocalPlayer.Character
					char:SetPrimaryPartCFrame(CFrame.new(pos + Vector3.new(-15,0,-15)))
					game:GetService("Players").LocalPlayer.Backpack.PaintBucket.Paint:FireServer(cp,color)
				end
			end
		else
			if waf == true then
				waf = false
				game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(oldpos)
				game.Players.LocalPlayer.Character.PrimaryPart.Anchored = false
				game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character:WaitForChild("Humanoid")
			else
				oldpos = game.Players.LocalPlayer.Character.PrimaryPart.CFrame
			end
		end
	end)
end;
task.spawn(C_17);

return G2L["1"], require;
